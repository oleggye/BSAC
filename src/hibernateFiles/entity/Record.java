package hibernateFiles.entity;
// Generated May 15, 2017 12:08:05 PM by Hibernate Tools 4.3.1

import java.util.Date;

import components.IName;
import java.util.HashSet;
import java.util.Set;

/**
 * Record generated by hbm2java
 */
public class Record implements java.io.Serializable, Cloneable, IName {

	private static final long serialVersionUID = 1L;

	private Integer idRecord;
	private Classroom classroom;
	private Group group;
	private Lecturer lecturer;
	private Subject subject;
	private SubjectFor subjectFor;
	private SubjectType subjectType;
	private byte weekNumber;
	private byte weekDay;
	private byte subjOrdinalNumber;
	private Date dateFrom;
	private Date dateTo;
	private Set<?> cancellations = new HashSet<Object>(0);

	public Record() {
	}

	public Record(Classroom classroom, Group group, Lecturer lecturer, Subject subject, SubjectFor subjectFor,
			SubjectType subjectType, byte weekNumber, byte weekDay, byte subjOrdinalNumber, Date dateFrom, Date dateTo) {
		this.classroom = classroom;
		this.group = group;
		this.lecturer = lecturer;
		this.subject = subject;
		this.subjectFor = subjectFor;
		this.subjectType = subjectType;
		this.weekNumber = weekNumber;
		this.weekDay = weekDay;
		this.subjOrdinalNumber = subjOrdinalNumber;
		this.dateFrom = dateFrom;
		this.dateTo = dateTo;
	}

	public Record(Classroom classroom, Group group, Lecturer lecturer, Subject subject, SubjectFor subjectFor,
			SubjectType subjectType, byte weekNumber, byte weekDay, byte subjOrdinalNumber, Date dateFrom, Date dateTo,
			Set<?> cancellations) {
		this.classroom = classroom;
		this.group = group;
		this.lecturer = lecturer;
		this.subject = subject;
		this.subjectFor = subjectFor;
		this.subjectType = subjectType;
		this.weekNumber = weekNumber;
		this.weekDay = weekDay;
		this.subjOrdinalNumber = subjOrdinalNumber;
		this.dateFrom = dateFrom;
		this.dateTo = dateTo;
		this.cancellations = cancellations;
	}

	public Integer getIdRecord() {
		return this.idRecord;
	}

	public void setIdRecord(Integer idRecord) {
		this.idRecord = idRecord;
	}

	public Classroom getClassroom() {
		return this.classroom;
	}

	public void setClassroom(Classroom classroom) {
		this.classroom = classroom;
	}

	public Group getGroup() {
		return this.group;
	}

	public void setGroup(Group group) {
		this.group = group;
	}

	public Lecturer getLecturer() {
		return this.lecturer;
	}

	public void setLecturer(Lecturer lecturer) {
		this.lecturer = lecturer;
	}

	public Subject getSubject() {
		return this.subject;
	}

	public void setSubject(Subject subject) {
		this.subject = subject;
	}

	public SubjectFor getSubjectFor() {
		return this.subjectFor;
	}

	public void setSubjectFor(SubjectFor subjectFor) {
		this.subjectFor = subjectFor;
	}

	public SubjectType getSubjectType() {
		return this.subjectType;
	}

	public void setSubjectType(SubjectType subjectType) {
		this.subjectType = subjectType;
	}

	public byte getWeekNumber() {
		return this.weekNumber;
	}

	public void setWeekNumber(byte weekNumber) {
		this.weekNumber = weekNumber;
	}

	public byte getWeekDay() {
		return this.weekDay;
	}

	public void setWeekDay(byte weekDay) {
		this.weekDay = weekDay;
	}

	public byte getSubjOrdinalNumber() {
		return this.subjOrdinalNumber;
	}

	public void setSubjOrdinalNumber(byte subjOrdinalNumber) {
		this.subjOrdinalNumber = subjOrdinalNumber;
	}

	public Date getDateFrom() {
		return this.dateFrom;
	}

	public void setDateFrom(Date dateFrom) {
		this.dateFrom = dateFrom;
	}

	public Date getDateTo() {
		return this.dateTo;
	}

	public void setDateTo(Date dateTo) {
		this.dateTo = dateTo;
	}

	public Set<?> getCancellations() {
		return this.cancellations;
	}

	public void setCancellations(Set<?> cancellations) {
		this.cancellations = cancellations;
	}

	public String getSubjAndSubjType(boolean isFullNames) {
		// 28.10.16 задал, чтобы отображались аббревиатуры, вместо целых
		// названий
		int idSubjectType = this.getSubjectType().getId();
		String subjectName;
		if (isFullNames) {
			subjectName = this.getSubject().getNameSubject();
		} else {
			subjectName = this.getSubject().getAbnameSubject();
		}

		switch (idSubjectType) {
		case 1:
			return String.format("%s(%s)", subjectName, "Лекция");
		case 2:
			return String.format("%s(%s)", subjectName, "ЛР");
		case 3:
			return String.format("%s(%s)", subjectName, "ПЗ");
		case 4:
			return String.format("%s(%s)", subjectName, "Консультация");
		case 5:
			return String.format("%s(%s)", subjectName, "Зачет");
		case 6:
			return String.format("%s(%s)", subjectName, "Экзамен");
		case 7:
			return String.format("%s(%s)", subjectName, "Учебное занятие");
		case 8:
			return String.format("%s(%s)", subjectName, "Переезд");
		default:
			return String.format("%s(%s)", subjectName, "Лекция");
		}
	}

	// @Override
	// public String toString() {
	// return "Record [idRecord=" + idRecord + ", classroom=" + classroom + ",
	// group=" + group + ", lecturer="
	// + lecturer + ", subject=" + subject + ", subjectFor=" + subjectFor + ",
	// subjectType=" + subjectType
	// + ", weekNumber=" + weekNumber + ", weekDay=" + weekDay + ",
	// subjOrdinalNumber=" + subjOrdinalNumber
	// + ", dateFrom=" + dateFrom + ", dateTo=" + dateTo + "]\n";
	// }
	// FIXME так не стоит делать!
	@Override
	public String toString() {
		return getSubjAndSubjType(false);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Record other = (Record) obj;
		if (classroom == null) {
			if (other.classroom != null) {
				return false;
			}
		} else if (!classroom.equals(other.classroom)) {
			return false;
		}
		if (dateFrom == null) {
			if (other.dateFrom != null) {
				return false;
			}
		} else if (!dateFrom.equals(other.dateFrom)) {
			return false;
		}
		if (dateTo == null) {
			if (other.dateTo != null) {
				return false;
			}
		} else if (!dateTo.equals(other.dateTo)) {
			return false;
		}
		if (group == null) {
			if (other.group != null) {
				return false;
			}
		} else if (!group.equals(other.group)) {
			return false;
		}
		if (idRecord == null) {
			if (other.idRecord != null) {
				return false;
			}
		} else if (!idRecord.equals(other.idRecord)) {
			return false;
		}
		if (lecturer == null) {
			if (other.lecturer != null) {
				return false;
			}
		} else if (!lecturer.equals(other.lecturer)) {
			return false;
		}
		if (subjOrdinalNumber != other.subjOrdinalNumber) {
			return false;
		}
		if (subject == null) {
			if (other.subject != null) {
				return false;
			}
		} else if (!subject.equals(other.subject)) {
			return false;
		}
		if (subjectFor == null) {
			if (other.subjectFor != null) {
				return false;
			}
		} else if (!subjectFor.equals(other.subjectFor)) {
			return false;
		}
		if (subjectType == null) {
			if (other.subjectType != null) {
				return false;
			}
		} else if (!subjectType.equals(other.subjectType)) {
			return false;
		}
		if (weekDay != other.weekDay) {
			return false;
		}
		if (weekNumber != other.weekNumber) {
			return false;
		}
		return true;
	}

	@Override
	public String getName() {
		// return getSubjAndSubjType(false);
		return "=1";
	}

	public String printRecord() {
		return "Record [idRecord=" + idRecord + ", classroom=" + classroom + ", group=" + group + ", lecturer="
				+ lecturer + ", subject=" + subject + ", subjectFor=" + subjectFor + ", subjectType=" + subjectType
				+ ", weekNumber=" + weekNumber + ", weekDay=" + weekDay + ", subjOrdinalNumber=" + subjOrdinalNumber
				+ ", dateFrom=" + dateFrom + ", dateTo=" + dateTo + "]";
	}

	@Override
	public Object clone() throws CloneNotSupportedException {
		Record result = (Record) super.clone();
		result.classroom = (Classroom) classroom.clone();
		result.group = (Group) group.clone();
		result.lecturer = (Lecturer) lecturer.clone();
		result.subject = (Subject) subject.clone();
		result.subjectFor = (SubjectFor) subjectFor.clone();
		result.subjectType = (SubjectType) subjectType.clone();
		result.dateTo = (Date) dateTo.clone();
		result.dateFrom = (Date) dateFrom.clone();
		return result;
	}
}
